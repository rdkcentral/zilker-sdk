<?xml version="1.0" encoding="UTF-8"?>
<!--
  -
   - Copyright 2021 Comcast Cable Communications Management, LLC
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  - http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -
  - SPDX-License-Identifier: Apache-2.0
  -
  -->

<!--
  -
  - Define the IPC/Events for "PKI service"
  -
  -->
<p:service
    xmlns:p="http://icontrol.com/service/v1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://icontrol.com/service/v1.0 ../src/main/xsd/service.xsd "
    eventPort="19800" ipcPort="1800" name="pkiService" >

    <p:pragma>
        <p:native>
            <p:apiHeaderDir>source/services/pki/api/c/public/pkiService</p:apiHeaderDir>
            <p:apiSrcDir>source/services/pki/api/c/src</p:apiSrcDir>
            <p:ipcHandlerSrcDir>source/services/pki/core/src</p:ipcHandlerSrcDir>
            <p:configFlag>CONFIG_SERVICE_PKI</p:configFlag>
            <p:freeform>#define PKI_SERVICE_NAME "pkiService"  // matches this service name as defined in watchdog.conf.  primarily used for name comparison on watchdogEvent notifications.</p:freeform>
        </p:native>
    </p:pragma>

    <!--
      - define message input/output POJOs
      -->

    <p:typedef enumTypeName="PKIConfigChangeReason">
        <p:value value="PKI_CONFIG_CHANGE_ISSUED" description="The CA signed a new certificate with a new key"/>
        <p:value value="PKI_CONFIG_CHANGE_RENEWED" description="The CA signed a new certificate with the same key"/>
        <p:value value="PKI_CONFIG_CHANGE_LOADED" description="PKI configuration loaded"/>
        <p:value value="PKI_CONFIG_CHANGE_UNLOADED" description="PKI configuration unloaded (no longer valid)"/>
    </p:typedef>

    <p:typedef enumTypeName="PKIOnboardingStatus">
        <p:value value="PKI_ONBOARDING_STARTED"/>
        <p:value value="PKI_ONBOARDING_COMPLETE"/>
        <p:value value="PKI_ONBOARDING_FAILED_GENERAL"/>
        <p:value value="PKI_ONBOARDING_FAILED_NO_SAT"/>
        <p:value value="PKI_ONBOARDING_FAILED_NO_CERTIFIER"/>
        <p:value value="PKI_ONBOARDING_FAILED_REJECTED"/>
    </p:typedef>

    <p:pojo varName="PKIConfig">
        <p:stringVariable varName="keystore" varDescription="Keystore in PKCS#12 format"/>
        <p:stringVariable varName="password" sensitive="true" varDescription="Keystore passphrase"/>
        <p:stringVariable varName="accountId" sensitive="true" varDescription="XBO Account ID"/>
        <p:stringVariable varName="chain" varDescription="Path to PKCS#7 CA certificate chain"/>
        <p:stringVariable varName="cert" varDescription="Path to certificate with intermediates (PEM)"/>
        <p:stringVariable varName="key" varDescription="Path to encrypted private key (PEM)"/>
        <p:stringVariable varName="installationId" varDescription="Installation ID (uuidv4)"/>
    </p:pojo>

    <!--
      - define the events
      -->
    <p:eventList generate="C">
        <p:event varName="PKIConfigChangedEvent"
                 varDescription="Emitted any time the PKI manager changes the key or is issued a new certificate">

            <p:enumVariable varName="changeReason" enumTypeName="PKIConfigChangeReason"/>
            <p:customRef customObj="PKIConfig"/>
            <p:eventCode>PKI_CONFIG_CHANGED_CODE</p:eventCode>
        </p:event>

        <p:event varName="PKIOnboardingEvent"
                 varDescription="Emitted while PKI registration is in progress, failed, or completed">

            <p:enumVariable varName="status"
                            enumTypeName="PKIOnboardingStatus"/>
            <p:stringVariable varName="statusMessage" varDescription="A message describing the status"/>
            <p:eventCode>PKI_ONBOARDING_EVENT_CODE</p:eventCode>
        </p:event>

        <!-- the event codes sent -->
        <p:code name="PKI_CONFIG_CHANGED_CODE" value="661"/>
        <p:code name="PKI_ONBOARDING_EVENT_CODE" value="-1"/>
        <!-- Max codes: 9 !-->
    </p:eventList>

    <!--
      - define IPC request messages
      -->

    <p:ipc>
        <p:message id="10" name="GET_CONFIG" generate="C">
            <p:description>Message to read the certificate keystore location and passphrase</p:description>
            <p:input>
                <p:bool varName="extended"
                        varDescription="When true, certificate and key paths will be set to existing PEM formatted files"/>
            </p:input>
            <p:output>
                <p:customRef>PKIConfig</p:customRef>
            </p:output>
        </p:message>

        <p:message id="-1" name="SET_SAT" generate="C" readTimeout="120">
            <p:description>Set a Service Authorization Token (SAT), which will initiate PKI onboarding.
                Use the value from the 'serviceAccessToken' key in the SAT service response JSON.
                PKIActivationEvents will follow; listen for these events prior to issuing this request.</p:description>

            <p:input>
                <p:string varName="bearerToken" varDescription="The SAT bearer token."/>
            </p:input>

            <p:output>
                <p:string varName="accountId" varDescription="NULL on registration failure, or an XBO service account ID on success."/>
            </p:output>
        </p:message>
    </p:ipc>

</p:service>
